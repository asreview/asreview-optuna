name: Deploy ASReview Optuna Environment

on:
  push:
    tags:
      - "*"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y ansible jq curl
    
    - name: Setup Exoscale CLI
      uses: nhedger/setup-exoscale@v3
      with:
        account: github-actions
        zone: de-fra-1
        key: ${{ secrets.EXOSCALE_API_KEY }}
        secret: ${{ secrets.EXOSCALE_API_SECRET }}

    - name: Find and Start Stopped Instance
      id: start-instance
      run: |
        set +e
        
        COUNT=0
        SUCCESS=false

        while [ $COUNT -lt 5 ]; do
          INSTANCE_NAME=$(exo compute instance list --output-format=json | jq -r '.[] | select(.name | test("^asreview2-optuna-")) | select(.state == "stopped") | .name' | head -n 1)

          if [ -n "$INSTANCE_NAME" ]; then
              SUCCESS=true
              break
          fi

          COUNT=$((COUNT + 1))
          echo "Attempt $COUNT of 5 failed. Retrying in 5 seconds..."
          sleep 5
        done

        if [ "$SUCCESS" = true ]; then
            echo "Instance name: $INSTANCE_NAME"
        else
            echo "Failed to retrieve instance name after 5 attempts."
            exit 1
        fi

        echo "instance_name=$INSTANCE_NAME" >> $GITHUB_ENV

        echo "Starting instance $INSTANCE_NAME..."

        COUNT=0
        SUCCESS=false

        while [ $COUNT -lt 5 ]; do
          exo compute instance start -f "$INSTANCE_NAME"

          EXIT_STATUS=$?

          if [ $EXIT_STATUS -eq 0 ]; then
              SUCCESS=true
              break
          fi
          COUNT=$((COUNT + 1))
          echo "Attempt $COUNT of 5 failed. Retrying in 5 seconds..."
          sleep 5
        done

        if [ "$SUCCESS" = true ]; then
            echo "Instance started successfully."
        else
            echo "Failed to start the instance after 5 attempts."
            exit 1
        fi

        COUNT=0
        SUCCESS=false

        while [ $COUNT -lt 5 ]; do
          INSTANCE_IP=$(exo compute instance show "$INSTANCE_NAME" --output-format=json | jq -r '.ip_address')
          
          if [ -n "$INSTANCE_IP" ]; then
              SUCCESS=true
              break
          fi
          
          COUNT=$((COUNT + 1))
          echo "Attempt $COUNT of 5 failed. Retrying in 5 seconds..."
          sleep 5
        done

        if [ "$SUCCESS" = true ]; then
            echo "Instance IP: $INSTANCE_IP"
        else
            echo "Failed to retrieve the instance IP after 5 attempts."
            exit 1
        fi

        if [ -z "$INSTANCE_IP" ]; then
          echo "Failed to retrieve IP address for instance $INSTANCE_NAME. Exiting."
          exit 1
        fi

        echo "instance_ip=$INSTANCE_IP" >> $GITHUB_ENV

    - name: Set Up SSH Private Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
    
    - name: Create Ansible Inventory File
      run: |
        echo "[asreview2]" > inventory.ini
        echo "${{ env.instance_ip }}" >> inventory.ini

    - name: Deploy Ansible Playbook
      env:
        ANSIBLE_HOST_KEY_CHECKING: "False"
      run: |
        echo "Sleep to ensure exo server is up..."
        sleep 10
        ansible-playbook ./asreview2-optuna/ansible/ansible_optuna_playbook.yml \
          --extra-vars "branch_name=${{ github.ref_name }} db_uri=${{ secrets.DB_API }}" \
          -u ubuntu --private-key ~/.ssh/id_rsa -i inventory.ini 